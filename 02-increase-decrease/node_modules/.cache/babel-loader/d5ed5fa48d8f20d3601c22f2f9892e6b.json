{"ast":null,"code":"import _classCallCheck from \"/Users/ivanyapeter/Sites/exercise/react/02-increase-decrease/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ivanyapeter/Sites/exercise/react/02-increase-decrease/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ivanyapeter/Sites/exercise/react/02-increase-decrease/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ivanyapeter/Sites/exercise/react/02-increase-decrease/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ivanyapeter/Sites/exercise/react/02-increase-decrease/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ivanyapeter/Sites/exercise/react/02-increase-decrease/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Button, _React$Component);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Button).apply(this, arguments));\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"button\", {\n        onClick: this.props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, this.props.label);\n    }\n  }]);\n\n  return Button;\n}(React.Component);\n\nvar Result = function Result(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.counter));\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  // Initial setup of\n  // Number of counter state 0\n  // Show the number\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.IncrementCounter = function () {\n      _this.setState({\n        counter: _this.state.counter + 1\n      });\n    };\n\n    _this.DecreaseCounter = function () {\n      _this.setState({\n        counter: _this.state.counter - 1\n      });\n    };\n\n    _this.state = {\n      counter: 0\n    };\n    return _this;\n  } // Create function named IncrementCounter\n  // getting state.click value and add 1\n\n\n  _createClass(App, [{\n    key: \"render\",\n    // If state.show true, button text 'Hide number' else 'Show number'\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.IncrementCounter,\n        label: \"+1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.DecreaseCounter,\n        label: \"-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Result, {\n        counter: this.state.counter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/ivanyapeter/Sites/exercise/react/02-increase-decrease/src/App.js"],"names":["React","Component","Button","props","onClick","label","Result","counter","App","IncrementCounter","setState","state","DecreaseCounter"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;;IAEMC,M;;;;;;;;;;;;;6BACK;AACP,aACE;AAAQ,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWE,KADd,CADF;AAKD;;;;EAPkBL,KAAK,CAACC,S;;AAU3B,IAAMK,MAAM,GAAG,SAATA,MAAS,CAACH,KAAD,EAAW;AACxB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAK,CAACI,OAAZ,CADH,CADF;AAKD,CAND;;IAQMC,G;;;;;AAEJ;AACA;AACA;AACA,eAAYL,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UASnBM,gBATmB,GASA,YAAM;AACvB,YAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE,MAAKI,KAAL,CAAWJ,OAAX,GAAqB;AAAhC,OAAd;AACD,KAXkB;;AAAA,UAenBK,eAfmB,GAeD,YAAM;AACtB,YAAKF,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE,MAAKI,KAAL,CAAWJ,OAAX,GAAqB;AAAhC,OAAd;AACD,KAjBkB;;AAEjB,UAAKI,KAAL,GAAa;AACXJ,MAAAA,OAAO,EAAE;AADE,KAAb;AAFiB;AAKlB,G,CAED;AACA;;;;;AAWA;6BACS;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKE,gBAAtB;AAAwC,QAAA,KAAK,EAAC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKG,eAAtB;AAAuC,QAAA,KAAK,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWJ,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAYD;;;;EAtCeN,S;;AAyClB,eAAeO,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass Button extends React.Component {\n  render() {\n    return (\n      <button onClick={this.props.onClick} >\n        {this.props.label}\n      </button>\n    )\n  }\n}\n\nconst Result = (props) => {\n  return (\n    <div>\n       <h2>{ props.counter }</h2> \n    </div>\n  );\n};\n\nclass App extends Component {\n\n  // Initial setup of\n  // Number of counter state 0\n  // Show the number\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0\n    };\n  }\n\n  // Create function named IncrementCounter\n  // getting state.click value and add 1\n  IncrementCounter = () => {\n    this.setState({ counter: this.state.counter + 1 });\n  }\n\n  // Create function named DecreaseCounter\n  // getting state.click value and decrease 1\n  DecreaseCounter = () => {\n    this.setState({ counter: this.state.counter - 1 });\n  }\n\n  // If state.show true, button text 'Hide number' else 'Show number'\n  render() {\n    return (\n      <div className=\"App\">\n\n         {/* <button onClick={this.ToggleClick}>\n           { this.state.show ? 'Hide number' : 'Show number' } THIS\n        </button>   */}\n         \n        <Button onClick={this.IncrementCounter} label='+1' />\n        <Button onClick={this.DecreaseCounter} label='-1' />\n        <Result counter={this.state.counter} /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}